<?xml version="1.0" encoding="UTF-8"?>
<project xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd" xmlns="http://maven.apache.org/POM/4.0.0"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
  <modelVersion>4.0.0</modelVersion>

  <groupId>de.cau.cs.kieler.klighd</groupId>
  <artifactId>edu.umd.cs.piccolo</artifactId>
  <version>1.3.4-SNAPSHOT</version>
  <packaging>jar</packaging>
  
  <properties>
    <tycho-version>1.2.0</tycho-version>
    <SWT-version>3.113.0</SWT-version>
    <targetJdk>1.8</targetJdk>
    <maven.compiler.source>1.8</maven.compiler.source>
    <maven.compiler.target>1.8</maven.compiler.target>
  </properties>

  <!-- Further required information for publishing on OSSRH -->
  <name>Piccolo2D</name>
  <description>Piccolo is a general-purpose Java-based engine that supports 2D visualizations. This is a forked version with a few fixes/adjustments.</description>
  <url>https://github.com/kieler/KLighD.Piccolo2d</url>

  <licenses>
    <license>
      <name>BSD-3-Clause</name>
      <url>https://opensource.org/license/bsd-3-clause/</url>
      <comments>See license-piccolo.txt</comments>
    </license>
  </licenses>

  <developers>
    <developer>
      <name>Niklas Rentz</name>
      <email>nre@informatik.uni-kiel.de</email>
      <organization>Kiel University</organization>
      <organizationUrl>https://www.rtsys.informatik.uni-kiel.de/</organizationUrl>
      <roles>
        <role>maintainer</role>
      </roles>
    </developer>
  </developers>

  <scm>
    <connection>scm:git:git://github.com:kieler/KLighD.Piccolo2d.git</connection>
    <developerConnection>scm:git:ssh://github.com:kieler/KLighD.Piccolo2d.git</developerConnection>
    <url>https://github.com/kieler/KLighD.Piccolo2d</url>
  </scm>

  <!-- while deploying, put the compiled artifact into the following (local) repository -->
  <distributionManagement>
    <repository>
     <id>internal-repo-for-downstream-usage</id>
     <url>file://klighd-piccolo2d</url>
    </repository>
  </distributionManagement>
  <!-- TODO: replace above with this for deploying to OSSRH -->
  <!-- <distributionManagement>
    <snapshotRepository>
      <id>ossrh</id>
      <url>https://s01.oss.sonatype.org/content/repositories/snapshots</url>
    </snapshotRepository>
    <repository>
      <id>ossrh</id>
      <url>https://s01.oss.sonatype.org/service/local/staging/deploy/maven2/</url>
    </repository>
  </distributionManagement> -->

  <profiles>
    <profile>
      <id>release</id>
      <build>
        <plugins>
          <!-- Configure the nexus server to deploy to. -->
          <plugin>
            <groupId>org.sonatype.plugins</groupId>
            <artifactId>nexus-staging-maven-plugin</artifactId>
            <version>1.6.13</version>
            <extensions>true</extensions>
            <configuration>
              <serverId>ossrh</serverId>
              <nexusUrl>https://s01.oss.sonatype.org/</nexusUrl>
              <autoReleaseAfterClose>false</autoReleaseAfterClose> <!-- this allows to manually inspect the staging repository: https://central.sonatype.org/publish/release/
              trigger a release later with `mvn nexus-staging:release` or set to true if no inspection is wanted.-->
            </configuration>
          </plugin>

          <!-- Sign all artifacts with GPG. -->
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-gpg-plugin</artifactId>
            <version>3.1.0</version>
            <executions>
              <execution>
                <id>sign-artifacts</id>
                <phase>verify</phase>
                <goals>
                  <goal>sign</goal>
                </goals>
                <!-- TODO: This is the ID of a KIELER test GPG key. Remove this or replace it with the real KIELER key ID. -->
                <configuration>
                  <keyname>0x22B04AC3</keyname>
                  <!-- TODO: is this needed? Does not seem to. -->
                  <!-- <passphraseServerId>0x22B04AC3</passphraseServerId> -->
                </configuration>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>
  
  <build>
    <sourceDirectory>src</sourceDirectory>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-jar-plugin</artifactId>
        <version>2.4</version>
        <configuration>
          <archive>
            <manifestFile>META-INF/MANIFEST.MF</manifestFile>
          </archive>
        </configuration>
      </plugin>
      <!-- Build source and Javadoc jars -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-source-plugin</artifactId>
        <version>3.2.1</version>
        <executions>
          <execution>
            <id>attach-sources</id>
            <goals>
              <goal>jar-no-fork</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-javadoc-plugin</artifactId>
        <version>3.5.0</version>
        <executions>
          <execution>
            <id>attach-javadocs</id>
            <goals>
              <goal>jar</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>
</project>
